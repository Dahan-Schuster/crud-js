{"version":3,"sources":["../../../app-es6/model/Negociacao/NegociacaoDAO.js"],"names":["NegociacaoDAO","conexao","_store","Promise","resolve","reject","requisicao","iniciarTransacao","clear","onsuccess","e","onerror","console","log","target","error","ponteiro","openCursor","negociacaoList","NegociacaoList","atual","result","negociacao","value","adicionar","Negociacao","data","_data","quantidade","_quantidade","valor","_valor","add","DAO"],"mappings":";;;;;;;;;;;;;;;;;;;;IAAMA,a;;;AAEL;;;;AAIA,yBAAYC,OAAZ,EAAqB;AAAA;;AAAA;;AACpB,uFAAMA,OAAN;AACA,UAAKC,MAAL,GAAc,aAAd;AAFoB;AAGpB;AAED;;;;;;;;;kCAKc;AAAA;;AACb,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACvC,YAAIC,UAAU,GAAG,MAAI,CAACC,gBAAL,GAAwBC,KAAxB,EAAjB;;AACAF,QAAAA,UAAU,CAACG,SAAX,GAAuB,UAAAC,CAAC;AAAA,iBAAIN,OAAO,CAACM,CAAD,CAAX;AAAA,SAAxB;;AACAJ,QAAAA,UAAU,CAACK,OAAX,GAAqB,UAAAD,CAAC,EAAI;AACzBE,UAAAA,OAAO,CAACC,GAAR,CAAYH,CAAC,CAACI,MAAF,CAASC,KAArB;AACAV,UAAAA,MAAM,CAAC,yCAAD,CAAN;AACA,SAHD;AAIA,OAPM,CAAP;AAQA;AAED;;;;;;;;;kCAMc;AAAA;;AACb,aAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACvC,YAAIW,QAAQ,GAAG,MAAI,CAACT,gBAAL,GAAwBU,UAAxB,EAAf;AAAA,YACCC,cAAc,GAAG,IAAIC,cAAJ,EADlB;;AAGAH,QAAAA,QAAQ,CAACP,SAAT,GAAqB,UAAAC,CAAC,EAAI;AACzB,cAAIU,KAAK,GAAGV,CAAC,CAACI,MAAF,CAASO,MAArB;;AACA,cAAID,KAAK,KAAK,IAAd,EAAoB;AACnB,gBAAIE,UAAU,GAAGF,KAAK,CAACG,KAAvB;AACAL,YAAAA,cAAc,CAACM,SAAf,CAAyB,IAAIC,UAAJ,CAAe;AACvCC,cAAAA,IAAI,EAAEJ,UAAU,CAACK,KADsB;AAEvCC,cAAAA,UAAU,EAAEN,UAAU,CAACO,WAFgB;AAGvCC,cAAAA,KAAK,EAAER,UAAU,CAACS;AAHqB,aAAf,CAAzB;AAMAX,YAAAA,KAAK,YAAL;AACA,WATD,MASO;AACNhB,YAAAA,OAAO,CAACc,cAAD,CAAP;AACA;AACD,SAdD;;AAeAF,QAAAA,QAAQ,CAACL,OAAT,GAAmB,UAAAD,CAAC,EAAI;AACvBE,UAAAA,OAAO,CAACC,GAAR,CAAYH,CAAC,CAACI,MAAF,CAASC,KAArB;AACAV,UAAAA,MAAM,CAAC,yCAAD,CAAN;AACA,SAHD;AAIA,OAvBM,CAAP;AAwBA;AAED;;;;;;;;2BAKOiB,U,EAAY;AAAA;;AAClB,aAAO,IAAInB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACvC,YAAIC,UAAU,GAAG,MAAI,CAACC,gBAAL,GAAwByB,GAAxB,CAA4BV,UAA5B,CAAjB;;AACAhB,QAAAA,UAAU,CAACG,SAAX,GAAuB,UAAAC,CAAC;AAAA,iBAAIN,OAAO,CAACM,CAAD,CAAX;AAAA,SAAxB;;AACAJ,QAAAA,UAAU,CAACK,OAAX,GAAqB,UAAAD,CAAC,EAAI;AACzBE,UAAAA,OAAO,CAACC,GAAR,CAAYH,CAAC,CAACI,MAAF,CAASC,KAArB;AACAV,UAAAA,MAAM,CAAC,yCAAD,CAAN;AACA,SAHD;AAIA,OAPM,CAAP;AAQA;;;;EA1E0B4B,G","sourcesContent":["class NegociacaoDAO extends DAO{\n\t\n\t/**\n\t * Inicia o NegociacaoDAO\n\t * @param {IDBDatabase} conexao\n\t */\n\tconstructor(conexao) {\n\t\tsuper(conexao)\n\t\tthis._store = 'negociacoes'\n\t}\n\t\n\t/**\n\t * Apaga todas as negociações salvas no banco\n\t *\n\t * @return {Promise}\n\t */\n\tapagarTodos() {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet requisicao = this.iniciarTransacao().clear()\n\t\t\trequisicao.onsuccess = e => resolve(e)\n\t\t\trequisicao.onerror = e => {\n\t\t\t\tconsole.log(e.target.error)\n\t\t\t\treject('Não foi possível finalizar a transação.')\n\t\t\t}\n\t\t})\n\t}\n\t\n\t/**\n\t * Pesquisa por todas as negociações salvas no banco\n\t * e retorna uma instância de NegociacaoList\n\t *\n\t * @return {Promise<NegociacaoList>}\n\t */\n\tlistarTodos() {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet ponteiro = this.iniciarTransacao().openCursor(),\n\t\t\t\tnegociacaoList = new NegociacaoList()\n\t\t\t\n\t\t\tponteiro.onsuccess = e => {\n\t\t\t\tlet atual = e.target.result\n\t\t\t\tif (atual !== null) {\n\t\t\t\t\tlet negociacao = atual.value\n\t\t\t\t\tnegociacaoList.adicionar(new Negociacao({\n\t\t\t\t\t\tdata: negociacao._data,\n\t\t\t\t\t\tquantidade: negociacao._quantidade,\n\t\t\t\t\t\tvalor: negociacao._valor\n\t\t\t\t\t}))\n\t\t\t\t\t\n\t\t\t\t\tatual.continue()\n\t\t\t\t} else {\n\t\t\t\t\tresolve(negociacaoList)\n\t\t\t\t}\n\t\t\t}\n\t\t\tponteiro.onerror = e => {\n\t\t\t\tconsole.log(e.target.error)\n\t\t\t\treject('Não foi possível listar as negociações.')\n\t\t\t}\n\t\t})\n\t}\n\t\n\t/**\n\t * Salva um objeto Negociacao no banco de dados\n\t * @param {Negociacao} negociacao\n\t * @returns {Promise}\n\t */\n\tsalvar(negociacao) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet requisicao = this.iniciarTransacao().add(negociacao)\n\t\t\trequisicao.onsuccess = e => resolve(e)\n\t\t\trequisicao.onerror = e => {\n\t\t\t\tconsole.log(e.target.error)\n\t\t\t\treject('Não foi possível finalizar a transação.')\n\t\t\t}\n\t\t})\n\t}\n\n}\n"],"file":"NegociacaoDAO.js"}