{"version":3,"sources":["../../../app-es6/model/Negociacao/NegociacaoDAO.js"],"names":["DAO","NegociacaoList","Negociacao","NegociacaoDAO","conexao","_store","Promise","resolve","reject","requisicao","iniciarTransacao","clear","onsuccess","e","onerror","console","log","target","error","ponteiro","openCursor","negociacaoList","atual","result","negociacao","value","adicionar","data","_data","quantidade","_quantidade","valor","_valor","add"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAQA,MAAAA,G,UAAAA,G;;AACAC,MAAAA,c,qBAAAA,c;;AACAC,MAAAA,U,iBAAAA,U;;;+BAEKC,a;;;AAEZ;;;;AAIA,+BAAYC,OAAZ,EAAqB;AAAA;;AAAA;;AACpB,6FAAMA,OAAN;AACA,gBAAKC,MAAL,GAAc,aAAd;AAFoB;AAGpB;AAED;;;;;;;;;wCAKc;AAAA;;AACb,mBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACvC,kBAAIC,UAAU,GAAG,MAAI,CAACC,gBAAL,GAAwBC,KAAxB,EAAjB;;AACAF,cAAAA,UAAU,CAACG,SAAX,GAAuB,UAAAC,CAAC;AAAA,uBAAIN,OAAO,CAACM,CAAD,CAAX;AAAA,eAAxB;;AACAJ,cAAAA,UAAU,CAACK,OAAX,GAAqB,UAAAD,CAAC,EAAI;AACzBE,gBAAAA,OAAO,CAACC,GAAR,CAAYH,CAAC,CAACI,MAAF,CAASC,KAArB;AACAV,gBAAAA,MAAM,CAAC,yCAAD,CAAN;AACA,eAHD;AAIA,aAPM,CAAP;AAQA;AAED;;;;;;;;;wCAMc;AAAA;;AACb,mBAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACvC,kBAAIW,QAAQ,GAAG,MAAI,CAACT,gBAAL,GAAwBU,UAAxB,EAAf;AAAA,kBACCC,cAAc,GAAG,IAAIpB,cAAJ,EADlB;;AAGAkB,cAAAA,QAAQ,CAACP,SAAT,GAAqB,UAAAC,CAAC,EAAI;AACzB,oBAAIS,KAAK,GAAGT,CAAC,CAACI,MAAF,CAASM,MAArB;;AACA,oBAAID,KAAK,KAAK,IAAd,EAAoB;AACnB,sBAAIE,UAAU,GAAGF,KAAK,CAACG,KAAvB;AACAJ,kBAAAA,cAAc,CAACK,SAAf,CAAyB,IAAIxB,UAAJ,CAAe;AACvCyB,oBAAAA,IAAI,EAAEH,UAAU,CAACI,KADsB;AAEvCC,oBAAAA,UAAU,EAAEL,UAAU,CAACM,WAFgB;AAGvCC,oBAAAA,KAAK,EAAEP,UAAU,CAACQ;AAHqB,mBAAf,CAAzB;AAMAV,kBAAAA,KAAK,YAAL;AACA,iBATD,MASO;AACNf,kBAAAA,OAAO,CAACc,cAAD,CAAP;AACA;AACD,eAdD;;AAeAF,cAAAA,QAAQ,CAACL,OAAT,GAAmB,UAAAD,CAAC,EAAI;AACvBE,gBAAAA,OAAO,CAACC,GAAR,CAAYH,CAAC,CAACI,MAAF,CAASC,KAArB;AACAV,gBAAAA,MAAM,CAAC,yCAAD,CAAN;AACA,eAHD;AAIA,aAvBM,CAAP;AAwBA;AAED;;;;;;;;iCAKOgB,U,EAAY;AAAA;;AAClB,mBAAO,IAAIlB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACvC,kBAAIC,UAAU,GAAG,MAAI,CAACC,gBAAL,GAAwBuB,GAAxB,CAA4BT,UAA5B,CAAjB;;AACAf,cAAAA,UAAU,CAACG,SAAX,GAAuB,UAAAC,CAAC;AAAA,uBAAIN,OAAO,CAACM,CAAD,CAAX;AAAA,eAAxB;;AACAJ,cAAAA,UAAU,CAACK,OAAX,GAAqB,UAAAD,CAAC,EAAI;AACzBE,gBAAAA,OAAO,CAACC,GAAR,CAAYH,CAAC,CAACI,MAAF,CAASC,KAArB;AACAV,gBAAAA,MAAM,CAAC,yCAAD,CAAN;AACA,eAHD;AAIA,aAPM,CAAP;AAQA;;;;QA1EiCR,G","sourcesContent":["import {DAO}            from \"../DAO.js\"\nimport {NegociacaoList} from \"./NegociacaoList.js\"\nimport {Negociacao}     from \"./Negociacao.js\"\n\nexport class NegociacaoDAO extends DAO {\n\t\n\t/**\n\t * Inicia o NegociacaoDAO\n\t * @param {IDBDatabase} conexao\n\t */\n\tconstructor(conexao) {\n\t\tsuper(conexao)\n\t\tthis._store = 'negociacoes'\n\t}\n\t\n\t/**\n\t * Apaga todas as negociações salvas no banco\n\t *\n\t * @return {Promise}\n\t */\n\tapagarTodos() {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet requisicao = this.iniciarTransacao().clear()\n\t\t\trequisicao.onsuccess = e => resolve(e)\n\t\t\trequisicao.onerror = e => {\n\t\t\t\tconsole.log(e.target.error)\n\t\t\t\treject('Não foi possível finalizar a transação.')\n\t\t\t}\n\t\t})\n\t}\n\t\n\t/**\n\t * Pesquisa por todas as negociações salvas no banco\n\t * e retorna uma instância de NegociacaoList\n\t *\n\t * @return {Promise<NegociacaoList>}\n\t */\n\tlistarTodos() {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet ponteiro = this.iniciarTransacao().openCursor(),\n\t\t\t\tnegociacaoList = new NegociacaoList()\n\t\t\t\n\t\t\tponteiro.onsuccess = e => {\n\t\t\t\tlet atual = e.target.result\n\t\t\t\tif (atual !== null) {\n\t\t\t\t\tlet negociacao = atual.value\n\t\t\t\t\tnegociacaoList.adicionar(new Negociacao({\n\t\t\t\t\t\tdata: negociacao._data,\n\t\t\t\t\t\tquantidade: negociacao._quantidade,\n\t\t\t\t\t\tvalor: negociacao._valor\n\t\t\t\t\t}))\n\t\t\t\t\t\n\t\t\t\t\tatual.continue()\n\t\t\t\t} else {\n\t\t\t\t\tresolve(negociacaoList)\n\t\t\t\t}\n\t\t\t}\n\t\t\tponteiro.onerror = e => {\n\t\t\t\tconsole.log(e.target.error)\n\t\t\t\treject('Não foi possível listar as negociações.')\n\t\t\t}\n\t\t})\n\t}\n\t\n\t/**\n\t * Salva um objeto Negociacao no banco de dados\n\t * @param {Negociacao} negociacao\n\t * @returns {Promise}\n\t */\n\tsalvar(negociacao) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet requisicao = this.iniciarTransacao().add(negociacao)\n\t\t\trequisicao.onsuccess = e => resolve(e)\n\t\t\trequisicao.onerror = e => {\n\t\t\t\tconsole.log(e.target.error)\n\t\t\t\treject('Não foi possível finalizar a transação.')\n\t\t\t}\n\t\t})\n\t}\n\n}\n"],"file":"NegociacaoDAO.js"}