{"version":3,"sources":["../../app-es6/view/View.js"],"names":["View","elemento","constructor","ClasseAbstrataError","_elemento","MetodoAbstradoError","model","innerHTML","_template"],"mappings":";;;;;;;;IAAMA,I;AAEL,gBAAYC,QAAZ,EAAsB;AAAA;;AACrB;AACA;AACA;AACA,QAAI,KAAKC,WAAL,KAAqBF,IAAzB,EAA+B;AAC9B,YAAM,IAAIG,mBAAJ,CAAwB,MAAxB,CAAN;AACA,KANoB,CAQrB;AACA;AACA;;;AAEA,SAAKC,SAAL,GAAiBH,QAAjB;AACA;;;;gCAEW;AACX,YAAM,IAAII,mBAAJ,CAAwB,gBAAxB,CAAN;AACA;;;2BAEMC,K,EAAO;AACb,WAAKF,SAAL,CAAeG,SAAf,GAA2B,KAAKC,SAAL,CAAeF,KAAf,CAA3B;AACA","sourcesContent":["class View {\n\t\n\tconstructor(elemento) {\n\t\t// Validar que o construtor não é da classe View\n\t\t// (uma classe filha, mesmo que não implemente um construtor\n\t\t// explicitamente, terá um construtor vazio)\n\t\tif (this.constructor === View) {\n\t\t\tthrow new ClasseAbstrataError('View')\n\t\t}\n\t\t\n\t\t// Se o código não lançou nenhum erro até agora, então\n\t\t// a classe é uma herança de View e implementa os métodos\n\t\t// necessários. Logo podemos continuar :)\n\t\t\n\t\tthis._elemento = elemento\n\t}\n\t\n\t_template() {\n\t\tthrow new MetodoAbstradoError('View._template')\n\t}\n\t\n\tupdate(model) {\n\t\tthis._elemento.innerHTML = this._template(model)\n\t}\n\t\n}"],"file":"View.js"}